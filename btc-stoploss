#!/usr/bin/ruby

ENV['BUNDLE_GEMFILE'] = File.dirname(__FILE__) + "/Gemfile"

require 'rubygems'
require 'bundler/setup'

require 'action_view'
require 'mail'

require_relative 'config'
require_relative 'bitstamp'

module BtcKit
	class StopLoss
		def should_execute?(order)
			if order["type"] == :stop_loss
				if @ticker <= order["price"]
					return true
				end
			elsif order["type"] == :alert_up
				if @ticker >= order["price"]
					return true
				end
			elsif order["type"] == :alert_down
				if @ticker <= order["price"]
					return true
				end
			end
			# TODO: implement more
			return false
		end

		def send_mail(what)
			ticker = @ticker
			target = @config.mail_target
			mail = Mail.new do
				from 'noreply+stoploss@rny.cz'
				to target
				subject "BTC StopLoss ALERT (#{ticker})!"
				body <<EOF
	Current bitcoin price as of #{Time.now}: #{ticker}

	Alerting you about:
		#{what.inspect}

	Have a very nice day.

	--
	This is an automated alert from BTC StopLoss.
EOF
			end
			mail.delivery_method :sendmail
			mail.deliver
		end

		def execute!(order)
			# TODO: log this
			# puts "Ticker: #{@ticker}"
			# puts "Executing order: #{order.inspect}"
			if order["type"] == :stop_loss
				price = order["minimum_price"] || :any
				result = @bitstamp.limit_order!(:sell, order["amount"], price)

				send_mail([order, result])
			elsif order["type"] == :alert_up
				send_mail(order)	
			elsif order["type"] == :alert_down
				send_mail(order)
			else
				send_mail("Errror: invalid order type #{order["type"]}!") # TODO: something better
			end
		end

		def main
			@config = BtcKit::Config.new
			creds = @config.credentials
			@bitstamp = Bitstamp.new(creds[:username], creds[:password])
			@ticker = @bitstamp.ticker
			# TODO: log "Current price: #@ticker"

			@orders = @config.orders

			orders_remaining = []

			@orders.each_index { |i|
				order = @orders[i]

				if should_execute?(order)
					execute!(order)
				else
					orders_remaining << order
				end
			}

			@config.save_orders orders_remaining
		end
	end
end

if __FILE__ == $0
	BtcKit::StopLoss.new.main
end
